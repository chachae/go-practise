<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6d50da74-dc6f-439d-a827-fee3dc3715c5" name="Changes" comment="feat: init some easy case">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/golang-learning.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Rebase.Settings">
    <option name="NEW_BASE" value="master" />
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="chachae &lt;chenyuexin1998@gmail.com&gt;" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/hellomodule/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/helloworld/hello.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/proxy/proxy_test.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2AdsTnb8vrv3TucSy4dqqkDe6Ft" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable..is.expanded": "true",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "E:/golang-project/golang-learning",
    "settings.editor.selected.configurable": "com.goide.configuration.GoProjectSettingsConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\golang-project\golang-learning" />
      <recent name="E:\golang-project\golang-learning\hellomodule" />
      <recent name="E:\golang-project\golang-learning\factory" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\golang-project\golang-learning\hellomodule" />
      <recent name="E:\golang-project\golang-learning" />
      <recent name="E:\golang-project\golang-learning\helloworld" />
      <recent name="E:\golang-project\golang-learning\strategy" />
      <recent name="E:\golang-project\golang-learning\factory" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go">
    <configuration name="go build golang-learning/" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/hellomodule/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestFunc in template_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$/template" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/template/template_test.go" />
      <framework value="gotest" />
      <pattern value="^\QTestFunc\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRestfulApi in restful_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$/restful" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/restful/restful_test.go" />
      <framework value="gotest" />
      <pattern value="^\QTestRestfulApi\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStrategy in strategy_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$/strategy" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/strategy/strategy_test.go" />
      <framework value="gotest" />
      <pattern value="^\QTestStrategy\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStrategy/testAdd in strategy_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-learning" />
      <working_directory value="$PROJECT_DIR$/strategy" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/strategy/strategy_test.go" />
      <framework value="gotest" />
      <pattern value="^\QTestStrategy\E$/^\QtestAdd\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build golang-learning/" />
      <item itemvalue="Go Build.go build main.go" />
      <item itemvalue="Go Test.TestFunc in template_test.go" />
      <item itemvalue="Go Test.TestRestfulApi in restful_test.go" />
      <item itemvalue="Go Test.TestStrategy in strategy_test.go" />
      <item itemvalue="Go Test.TestStrategy/testAdd in strategy_test.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.TestRestfulApi in restful_test.go" />
        <item itemvalue="Go Test.TestFunc in template_test.go" />
        <item itemvalue="Go Test.TestStrategy in strategy_test.go" />
        <item itemvalue="Go Test.TestStrategy/testAdd in strategy_test.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: init some easy case" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: init some easy case" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>